name: Build and Publish Bytecode

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: windows-latest
            platform: win32
            arch: ia32
          - os: macos-15
            platform: darwin
            arch: x64
          - os: macos-15
            platform: darwin
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.15.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build bytecode
      env:
        PLATFORM: ${{ matrix.platform }}
        ARCH: ${{ matrix.arch }}
      run: |
        node ./tools/pack.js ./codes/clients/index.js
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bytecode-${{ matrix.platform }}-${{ matrix.arch }}
        path: node_modules/*/
        retention-days: 90
        if-no-files-found: error

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Bytecode builds for multiple platforms:
          
          - Linux x64
          - Windows x64
          - Windows ia32
          - macOS x64 (Intel)
          - macOS arm64 (Apple Silicon)
        draft: false
        prerelease: false
        
    - name: Create package
      run: |
        cd artifacts
        ls -la
        mkdir -p bytecode-package
        # 遍历所有artifacts目录，复制.bc文件
        for dir in bytecode-*; do
          if [ -d "$dir" ]; then
            echo "Processing directory: $dir"
            find "$dir" -name "*.bc" -exec cp {} bytecode-package/ \;
          fi
        done
        echo "Files in bytecode-package:"
        ls -la bytecode-package/
        # 创建压缩包
        tar -czf bytecode-all-platforms-${{ github.ref_name }}.tar.gz -C bytecode-package .
        ls -la *.tar.gz
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/bytecode-all-platforms-${{ github.ref_name }}.tar.gz
        asset_name: bytecode-all-platforms-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
